<?php/** * Elementor Widget * @package Appside * @since 1.0.0 */namespace Elementor;class wphex_Product_Grid_Two_Widget extends Widget_Base {    /**     * Get widget name.     *     * Retrieve Elementor widget name.     *     * @return string Widget name.     * @since 1.0.0     * @access public     *     */    public function get_name() {        return 'wphex-product-grid-two-widget';    }    /**     * Get widget title.     *     * Retrieve Elementor widget title.     *     * @return string Widget title.     * @since 1.0.0     * @access public     *     */    public function get_title() {        return esc_html__( 'Products Gallery', 'wphex-master' );    }    /**     * Get widget icon.     *     * Retrieve Elementor widget icon.     *     * @return string Widget icon.     * @since 1.0.0     * @access public     *     */    public function get_icon() {        return 'eicon-gallery-justified';    }    /**     * Get widget categories.     *     * Retrieve the list of categories the Elementor widget belongs to.     *     * @return array Widget categories.     * @since 1.0.0     * @access public     *     */    public function get_categories() {        return [ 'wphex_widgets' ];    }    /**     * Register Elementor widget controls.     *     * Adds different input fields to allow the user to change and customize the widget settings.     *     * @since 1.0.0     * @access protected     */    protected function _register_controls() {        $this->start_controls_section(            'settings_section',            [                'label' => esc_html__( 'General Settings', 'wphex-master' ),                'tab'   => Controls_Manager::TAB_CONTENT,            ]        );        $this->add_control( 'column', [            'label'       => esc_html__( 'Column', 'wphex-master' ),            'type'        => Controls_Manager::SELECT,            'options' => [                '6' => esc_html__('02 Column','wphex-master'),                '4' => esc_html__('03 Column','wphex-master'),                '3' => esc_html__('04 Column','wphex-master'),            ],            'default'     => '4',            'description' => esc_html__( 'select column' )        ] );        $this->add_control( 'total', [            'label'       => esc_html__( 'Total Posts', 'wphex-master' ),            'type'        => Controls_Manager::TEXT,            'default'     => '3',            'description' => esc_html__( 'enter how many post you want in masonry , enter -1 for unlimited post.' )        ] );        $this->add_control('product_by_id',[            'label'       => esc_html__( 'Product By ID', 'wphex-master' ),            'type'        => Controls_Manager::SWITCHER,            'default' => 'no'        ]);        $this->add_control( 'post__in', [            'label'       => esc_html__( 'Post In', 'wphex-master' ),            'type'        => Controls_Manager::SELECT2,            'options'     => wphex()->get_post_type_list( 'download', 'id' ),            'label_block' => true,            'multiple' => true,            'condition' => ['product_by_id' => 'yes']        ] );        $this->add_control( 'category', [            'label'       => esc_html__( 'Category', 'wphex-master' ),            'type'        => Controls_Manager::SELECT2,            'options'     => wphex()->get_terms_names( 'download_category', 'id' ),            'multiple' => true,            'condition' => ['product_by_id' => 'no']        ] );        $this->add_control( 'order', [            'label'       => esc_html__( 'Order', 'wphex-master' ),            'type'        => Controls_Manager::SELECT,            'options'     => array(                'ASC'  => esc_html__( 'Ascending', 'wphex-master' ),                'DESC' => esc_html__( 'Descending', 'wphex-master' ),            ),            'default'     => 'ASC',            'description' => esc_html__( 'select order', 'wphex-master' )        ] );        $this->add_control( 'orderby', [            'label'       => esc_html__( 'OrderBy', 'wphex-master' ),            'type'        => Controls_Manager::SELECT,            'options'     => array(                'ID'            => esc_html__( 'ID', 'wphex-master' ),                'title'         => esc_html__( 'Title', 'wphex-master' ),                'date'          => esc_html__( 'Date', 'wphex-master' ),                'rand'          => esc_html__( 'Random', 'wphex-master' ),                'comment_count' => esc_html__( 'Most Comments', 'wphex-master' ),            ),            'default'     => 'ID',            'description' => esc_html__( 'select order', 'wphex-master' )        ] );        $this->add_control(            'show_button',            [                'label' => esc_html__( 'Show Button', 'wphex-master' ),                'type' => \Elementor\Controls_Manager::SWITCHER,                'label_on' => esc_html__( 'Show', 'wphex-master' ),                'label_off' => esc_html__( 'Hide', 'wphex-master' ),                'return_value' => 'yes',                'default' => 'yes',            ]        );        $this->add_control(            'button_text',            [                'label' => esc_html__( 'Button Text', 'wphex-master' ),                'type' => \Elementor\Controls_Manager::TEXT,                'default' => esc_html__( 'All Products', 'wphex-master' ),                'placeholder' => esc_html__( 'Type button text here', 'wphex-master' ),                'condition' => [                    'show_button' => 'yes'                ]            ]        );        $this->add_control(            'button_link',            [                'label' => esc_html__( 'Button Link', 'wphex-master' ),                'type' => \Elementor\Controls_Manager::URL,                'placeholder' => esc_html__( 'https://your-link.com', 'wphex-master' ),                'options' => [ 'url', 'is_external', 'nofollow' ],                'default' => [                    'url' => '#',                    'is_external' => true,                    'nofollow' => true,                    // 'custom_attributes' => '',                ],                'label_block' => true,                'condition' => [                    'show_button' => 'yes'                ]            ]        );        $this->add_control(            'button_icon',            [                'label' => esc_html__( 'Button Icon', 'wphex-master' ),                'type' => \Elementor\Controls_Manager::ICONS,                'default' => [                    'value' => 'fas fa-chevron-right',                    'library' => 'fa-solid',                ],                'recommended' => [                    'fa-solid' => [                        'circle',                        'dot-circle',                        'square-full',                    ],                    'fa-regular' => [                        'circle',                        'dot-circle',                        'square-full',                    ],                ],                'condition' => [                    'show_button' => 'yes'                ]            ]        );        $this->add_control(            'show_pagination',            [                'label' => esc_html__( 'Show Pagination', 'wphex-master' ),                'type' => \Elementor\Controls_Manager::SWITCHER,                'label_on' => esc_html__( 'Show', 'wphex-master' ),                'label_off' => esc_html__( 'Hide', 'wphex-master' ),                'return_value' => 'yes',                'default' => 'yes',            ]        );        $this->end_controls_section();        // products gallery style section starts here        $this->start_controls_section(            'products_gallery_style',            [                'label' => esc_html__( 'Products Gallery', 'wphex-master' ),                'tab' => \Elementor\Controls_Manager::TAB_STYLE,            ]        );        $this->add_control(            'image_border_radius',            [                'label' => esc_html__( 'Image Border Radius', 'wphex-master' ),                'type' => \Elementor\Controls_Manager::SLIDER,                'size_units' => [ 'px', '%', 'em', 'rem', 'custom' ],                'range' => [                    'px' => [                        'min' => 0,                        'max' => 1000,                        'step' => 5,                    ],                    '%' => [                        'min' => 0,                        'max' => 100,                        'step' => 5,                    ],                ],                'default' => [                    'unit' => 'px',                    'size' => 10,                ],                'selectors' => [                    '{{WRAPPER}} .single_products__thumb img' => 'border-radius: {{SIZE}}{{UNIT}};',                ],            ]        );        $this->add_responsive_control(            'pagination_align',            [                'label' => esc_html__( 'Alignment', 'wphex-master' ),                'type' => \Elementor\Controls_Manager::CHOOSE,                'options' => [                    'left' => [                        'title' => esc_html__( 'Left', 'wphex-master' ),                        'icon' => 'eicon-text-align-left',                    ],                    'center' => [                        'title' => esc_html__( 'Center', 'wphex-master' ),                        'icon' => 'eicon-text-align-center',                    ],                    'right' => [                        'title' => esc_html__( 'Right', 'wphex-master' ),                        'icon' => 'eicon-text-align-right',                    ],                ],                'default' => 'center',                'toggle' => true,                'selectors' => [                    '{{WRAPPER}} .pagination_wrap' => 'text-align: {{VALUE}}',                ],            ]        );        $this->end_controls_section();    }    /**     * Render Elementor widget output on the frontend.     * Written in PHP and used to generate the final HTML.     *     * @since 1.0.0     * @access protected     */    protected function render() {        $settings             = $this->get_settings_for_display();        $button_link          = ! empty( $settings['button_link']['url'] ) ? $settings['button_link']['url'] : [];        //query settings        $post__in = $settings['post__in'];        $total_posts = $settings['total'];        $category    = $settings['category'];        $order       = $settings['order'];        $orderby     = $settings['orderby'];        //setup query        $paged = get_query_var('paged') ? get_query_var('paged') : 1;        $args = array(            'post_type' => 'download',            'posts_per_page' => $total_posts,            'order' => $order,            'orderby' => $orderby,            'post_status' => 'publish',            'ignore_sticky_posts' => 1,            'paged' => $paged,        );        if (!empty($category) && !empty($settings['product_by_id'])) {            $args['tax_query'] = array(                array(                    'taxonomy' => 'download_category',                    'field' => 'term_id',                    'terms' => 'download_category'                )            );        }        if (!empty($post__in)) {            $args['post__in'] = $post__in;            $args['posts_per_page'] = count($post__in);            unset($args['order']);            unset($args['orderby']);        }        $post_data = new \WP_Query($args);        ?>        <div class="row g-4 mt-4">            <?php            while ($post_data->have_posts()):$post_data->the_post();                $img_id = get_post_thumbnail_id(get_the_ID()) ? get_post_thumbnail_id(get_the_ID()) : false;                $img_url_val = $img_id ? wp_get_attachment_image_src($img_id,'wphex_product',false) : '';                $img_url = is_array($img_url_val) && !empty($img_url_val) ? $img_url_val[0] : '';                $img_alt =  $img_id ? get_post_meta($img_id,'_wp_attachment_image_alt',true) : '';                //download metabox                $envato_product_id = get_post_meta(get_the_ID(),'wphex_envato_product_id',true);                //if sales number not avilable extact it form envato                $item_sales = get_post_meta(get_the_ID(),'_edd_download_sales',true);                if($item_sales == 0 && !empty($envato_product_id)){                    $item_price = \wphex_Envato::get_product_sales_by_id($envato_product_id);                    update_post_meta(get_the_ID(),'_edd_download_sales',$item_price);                }                ?>                <div data-attribute="<?php $terms = get_the_terms( get_the_ID(), 'download_category' );if( is_array( $terms ) ){foreach($terms as $term){                    echo str_replace(" ","_",strtolower($term->name));                }}?>" class="col-lg-<?php echo esc_attr($settings['column'])?> col-sm-6 wow zoomIn product-grids" data-wow-delay=".1s">                    <div id="element2" class="single_products">                        <div class="single_products__thumb">                            <a href="<?php the_permalink(); ?>">                                <img src="<?php echo esc_url($img_url); ?>" alt="<?php echo esc_attr($img_alt);?>">                            </a>                        </div>                        <div class="single_products__contents">                            <h4 class="single_products__title"><a href="<?php the_permalink(); ?>"><?php the_title();?></a></h4>                        </div>                    </div>                </div>            <?php            endwhile;            wp_reset_query();            ?>        </div>        <?php if( 'yes' == $settings['show_button'] ) : ?>            <div class="row mt-5">                <div class="btn-wrapper center-text">                    <a href="<?php echo esc_url( $button_link ); ?>" class="cmn-btn btn-gradient-1 radius-10"><?php echo esc_html( $settings['button_text'] ); ?> <?php \Elementor\Icons_Manager::render_icon( $settings['button_icon'], [ 'aria-hidden' => 'true' ] ); ?></a>                </div>            </div>        <?php endif; ?>        <div class="row mt-5">            <div class="col-lg-12">                <div class="pagination_wrap">                    <?php                    $big = 12345678;                    if( 'yes' === $settings['show_pagination'] ) {                        $paginate = paginate_links(array(                            'base' => str_replace( $big, '%#%', esc_url( get_pagenum_link( $big ) ) ),                            'total' => $post_data->max_num_pages,                            'prev_next' => true,                            'type' => 'list',                            'prev_text' => '<i class="fa fa-chevron-left"></i>',                            'next_text' => '<i class="fa fa-chevron-right"></i>',                            'current' => max(1, $paged),                        ));                        $paginate = str_replace( 'page-numbers', 'pagination_list', $paginate );                        $paginate = str_replace( '<a class="pagination_list"', '<a class="pagination_list__item__link"', $paginate );                        $paginate = str_replace( '</span>', '</a>', $paginate );                        $paginate = str_replace( '<li>', '<li class="pagination_list__item">', $paginate );                        $paginate = str_replace( '<li class="pagination_list__item"><a class="next pagination_list"', '<li class="pagination_list__item__prev"><a class="pagination_list__item__link"', $paginate );                        $paginate = str_replace( '<li class="pagination_list__item"><a class="prev pagination_list"', '<li class="pagination_list__item__prev"><a class="pagination_list__item__link"', $paginate );                        $paginate = str_replace( '<li class="pagination_list__item"><a class="next pagination_list"', '<li class="pagination_list__item__next"><a class="pagination_list__item__link"', $paginate );                        $paginate = str_replace( '<li class="pagination_list__item"><span aria-current="page" class="pagination_list current">', '<li class="pagination_list__item active"><a href="javascript:void(0)" class="pagination_list__item__link">', $paginate );                        $paginate = str_replace( '</span>', '</a>', $paginate );                        echo $paginate;                    }                    ?>                </div>            </div>        </div>        <?php    }}Plugin::instance()->widgets_manager->register_widget_type( new wphex_Product_Grid_Two_Widget() );